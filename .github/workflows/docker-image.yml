name: Build & Push Multi-Platform Image

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

env:
  # Change these if you want to publish to a different org/name
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # e.g. owner/repo

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write # needed for ghcr.io with GITHUB_TOKEN
      id-token: write # (optional) for provenance/attestations

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for cross-arch emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ---- Login (GHCR) ----
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Tag strategies:
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }} # build PRs without pushing
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # Fast incremental builds:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Optional: pass build args or target
          # build-args: |
          #   FOO=bar
          # target: production
          # Optional supply provenance/attestations (requires BuildKit/ID token perms):
          provenance: true
          sbom: true
